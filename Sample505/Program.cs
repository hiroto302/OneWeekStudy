using System;

// オーバーライドとポリモーフィズムの概念について学ぶプログラム

// オーバーライドについて
// 同じメソッドで親クラスと違う処理を子クラスでしたい時に使う
// 子クラスのメソッドには　override 修飾子をつける
// 親クラスのメソッドには　virtual  修飾子をつける

// ポリモーフィズムについて
// 今回のオーバーライドや、オーバーロードのように、状況に応じて動作を使い分けるようにすることをpolymorphism(多様性, 多態性)と呼ぶ
// 他のオブジェクト指向言語でも用いられる非常に大事な概念である
// メソッドの目的が同じであれば同じメソッド名を付けることができるのでソースコードの可読性が高まる
// このポリモーフィズムに対応しているため、引数の型が違うなど「同名のメソッド」を複数定義することができているのである

namespace Sample505
{
    class Program
    {
        static void Main(string[] args)
        {
            Parent p = new Parent();
            p.Foo();

            Child c = new Child();
            c.Foo();
        }
    }
}
